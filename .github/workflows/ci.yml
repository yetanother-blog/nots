name: ðŸ‘€ Check changes
on: pull_request

env:
  CI: 'true'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Start docker compose
        run: npm run docker:up
      - name: Install deps
        uses: bahmutov/npm-install@v1
      - name: Run unit tests
        run: npm test

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install deps
        uses: bahmutov/npm-install@v1
      - name: Lint code
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install deps
        uses: bahmutov/npm-install@v1
      - name: Build app
        run: npm run build

  typecheck:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install deps
        uses: bahmutov/npm-install@v1
      - name: Transpile TypeScript
        run: npm run typecheck

  preview-ui:
    if: github.event.pull_request.user.login != 'dependabot[bot]'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: ui-preview
      url: ${{ steps.get-url.outputs.PREVIEW_URL }}
    env:
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install deps
        uses: bahmutov/npm-install@v1
      - name: Build UI
        run: npx vercel build --yes --local-config vercel-ui.json --token ${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to Vercel
        run: npx vercel deploy --prebuilt --yes --local-config vercel-ui.json --token ${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
      - name: Get URL
        id: get-url
        run: echo "PREVIEW_URL=$(cat deployment-url.txt)" >> "$GITHUB_OUTPUT"

  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      WITH_WEB_SERVER: true
      DATABASE_URL: postgres://postgres:postgres@localhost:9876/nots
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install deps
        uses: bahmutov/npm-install@v1
      - name: Start docker compose
        run: npm run docker:up
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(npx playwright --version)" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - name: Setup database
        run: npx drizzle-kit push
      - name: Run e2e tests
        run: npm run e2e:ci
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
